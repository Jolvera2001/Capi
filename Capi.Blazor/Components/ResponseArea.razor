@using System.Text.Json
<div>
    @if (Response is null)
    {
        <h2>No response</h2>
    }
    else
    {
        <div>
            <pre>
                @formattedResponse
            </pre>
        </div>
    }
</div>

@code {
    [Parameter] 
    public string? Response { get; set; }

    private string? previousResponse = "";
    private string formattedResponse = "";

    protected override async Task OnParametersSetAsync()
    {
        if (Response != previousResponse || Response != null)
        {
            FormatJson();
            previousResponse = Response;
        }
    }

    private void FormatJson()
    {
        try
        {
            var jsonObject = JsonDocument.Parse(Response);
            var options = new JsonSerializerOptions
            {
                WriteIndented = true,
            };

            formattedResponse = JsonSerializer.Serialize(jsonObject, options);
            Console.WriteLine("Format method ran!");
        }
        catch (JsonException ex)
        {
            formattedResponse = $"Invalid JSON: {ex.Message}";
        }
    }
}