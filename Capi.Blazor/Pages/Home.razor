@page "/"
@using System.ComponentModel
@using Capi.Blazor.Models
@implements IDisposable
@inject HomeViewModel ViewModel

<main>
    <div>
        <select @bind="ViewModel.Method">
            @foreach (var method in Enum.GetValues<MethodEnums>())
            {
                <option value="@method">@method.ToString()</option>
            }
        </select>
        <input @bind="ViewModel.Path"/>
        <button @onclick="ViewModel.SendCommand.ExecuteAsync"
                disabled="@(!ViewModel.SendCommand.CanExecute(null))">
            Send
        </button>
    </div>
    <TabbedBuilder 
        ParamCollection="ViewModel.Queries" 
        OnParamAdd="ViewModel.AddParam" 
        OnParamRemove="ViewModel.RemoveParam" />
    <ResponseArea 
        Response="@ViewModel.Response"/>
</main>

@code
{
    protected override void OnInitialized()
    {
        ViewModel.PropertyChanged += OnViewModelStateChange;
        Console.WriteLine($"Viewmodel is null: {ViewModel == null}");
    }

    public void Dispose()
    {
        ViewModel.PropertyChanged -= OnViewModelStateChange;
    }

    private void OnViewModelStateChange(object? sender, PropertyChangedEventArgs e)
    {
        InvokeAsync(StateHasChanged);
    }
}
